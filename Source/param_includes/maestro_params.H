
// This file is automatically created by parse_maestro_params.py.  To update
// or add runtime parameters, please edit _cpp_parameters and then run
// mk_params.sh

#ifndef _MAESTRO_PARAMS_H_
#define _MAESTRO_PARAMS_H_

namespace maestro {
extern AMREX_GPU_MANAGED int reflux_type;
extern AMREX_GPU_MANAGED int maestro_verbose;
extern std::string model_file;
extern AMREX_GPU_MANAGED bool perturb_model;
extern AMREX_GPU_MANAGED bool print_init_hse_diag;
extern AMREX_GPU_MANAGED amrex::Real stop_time;
extern AMREX_GPU_MANAGED int max_step;
extern AMREX_GPU_MANAGED amrex::Real cfl;
extern AMREX_GPU_MANAGED amrex::Real init_shrink;
extern AMREX_GPU_MANAGED amrex::Real small_dt;
extern AMREX_GPU_MANAGED amrex::Real max_dt_growth;
extern AMREX_GPU_MANAGED amrex::Real max_dt;
extern AMREX_GPU_MANAGED amrex::Real fixed_dt;
extern AMREX_GPU_MANAGED amrex::Real nuclear_dt_fac;
extern AMREX_GPU_MANAGED bool use_soundspeed_firstdt;
extern AMREX_GPU_MANAGED bool use_divu_firstdt;
extern AMREX_GPU_MANAGED int spherical;
extern AMREX_GPU_MANAGED bool octant;
extern AMREX_GPU_MANAGED int do_2d_planar_octant;
extern AMREX_GPU_MANAGED int regrid_int;
extern AMREX_GPU_MANAGED int amr_buf_width;
extern AMREX_GPU_MANAGED int drdxfac;
extern AMREX_GPU_MANAGED int minwidth;
extern AMREX_GPU_MANAGED amrex::Real min_eff;
extern AMREX_GPU_MANAGED bool use_tpert_in_tagging;
extern AMREX_GPU_MANAGED int plot_int;
extern AMREX_GPU_MANAGED int small_plot_int;
extern AMREX_GPU_MANAGED amrex::Real plot_deltat;
extern AMREX_GPU_MANAGED amrex::Real small_plot_deltat;
extern AMREX_GPU_MANAGED int chk_int;
extern AMREX_GPU_MANAGED amrex::Real chk_deltat;
extern AMREX_GPU_MANAGED bool plot_h_with_use_tfromp;
extern AMREX_GPU_MANAGED bool plot_spec;
extern AMREX_GPU_MANAGED bool plot_omegadot;
extern AMREX_GPU_MANAGED bool plot_Hext;
extern AMREX_GPU_MANAGED bool plot_Hnuc;
extern AMREX_GPU_MANAGED bool plot_eta;
extern AMREX_GPU_MANAGED bool plot_trac;
extern AMREX_GPU_MANAGED bool plot_base_state;
extern AMREX_GPU_MANAGED bool plot_gpi;
extern AMREX_GPU_MANAGED bool plot_cs;
extern AMREX_GPU_MANAGED bool plot_grav;
extern std::string plot_base_name;
extern std::string small_plot_base_name;
extern std::string check_base_name;
extern AMREX_GPU_MANAGED int diag_buf_size;
extern AMREX_GPU_MANAGED bool plot_ad_excess;
extern AMREX_GPU_MANAGED bool plot_processors;
extern AMREX_GPU_MANAGED bool plot_pidivu;
extern std::string small_plot_vars;
extern AMREX_GPU_MANAGED int init_iter;
extern AMREX_GPU_MANAGED int init_divu_iter;
extern std::string restart_file;
extern AMREX_GPU_MANAGED bool restart_into_finer;
extern AMREX_GPU_MANAGED bool do_initial_projection;
extern AMREX_GPU_MANAGED int mg_verbose;
extern AMREX_GPU_MANAGED int cg_verbose;
extern AMREX_GPU_MANAGED int mg_cycle_type;
extern AMREX_GPU_MANAGED int hg_cycle_type;
extern AMREX_GPU_MANAGED int hg_bottom_solver;
extern AMREX_GPU_MANAGED int mg_bottom_solver;
extern AMREX_GPU_MANAGED int max_mg_bottom_nlevels;
extern AMREX_GPU_MANAGED int mg_bottom_nu;
extern AMREX_GPU_MANAGED int mg_nu_1;
extern AMREX_GPU_MANAGED int mg_nu_2;
extern AMREX_GPU_MANAGED bool hg_dense_stencil;
extern AMREX_GPU_MANAGED bool do_sponge;
extern AMREX_GPU_MANAGED amrex::Real sponge_kappa;
extern AMREX_GPU_MANAGED amrex::Real sponge_center_density;
extern AMREX_GPU_MANAGED amrex::Real sponge_start_factor;
extern AMREX_GPU_MANAGED bool plot_sponge_fdamp;
extern AMREX_GPU_MANAGED amrex::Real anelastic_cutoff_density;
extern AMREX_GPU_MANAGED amrex::Real base_cutoff_density;
extern AMREX_GPU_MANAGED amrex::Real burning_cutoff_density_lo;
extern AMREX_GPU_MANAGED amrex::Real burning_cutoff_density_hi;
extern AMREX_GPU_MANAGED amrex::Real heating_cutoff_density_lo;
extern AMREX_GPU_MANAGED amrex::Real heating_cutoff_density_hi;
extern AMREX_GPU_MANAGED amrex::Real buoyancy_cutoff_factor;
extern AMREX_GPU_MANAGED amrex::Real dpdt_factor;
extern AMREX_GPU_MANAGED bool do_planar_invsq_grav;
extern AMREX_GPU_MANAGED amrex::Real planar_invsq_mass;
extern AMREX_GPU_MANAGED bool evolve_base_state;
extern AMREX_GPU_MANAGED bool use_exact_base_state;
extern AMREX_GPU_MANAGED bool fix_base_state;
extern AMREX_GPU_MANAGED bool average_base_state;
extern AMREX_GPU_MANAGED bool do_smallscale;
extern AMREX_GPU_MANAGED bool do_eos_h_above_cutoff;
extern AMREX_GPU_MANAGED int enthalpy_pred_type;
extern AMREX_GPU_MANAGED int species_pred_type;
extern AMREX_GPU_MANAGED bool use_delta_gamma1_term;
extern AMREX_GPU_MANAGED bool use_etarho;
extern AMREX_GPU_MANAGED int slope_order;
extern AMREX_GPU_MANAGED amrex::Real grav_const;
extern AMREX_GPU_MANAGED int ppm_type;
extern AMREX_GPU_MANAGED int bds_type;
extern AMREX_GPU_MANAGED int ppm_trace_forces;
extern AMREX_GPU_MANAGED int beta0_type;
extern AMREX_GPU_MANAGED bool use_linear_grav_in_beta0;
extern AMREX_GPU_MANAGED amrex::Real rotational_frequency;
extern AMREX_GPU_MANAGED amrex::Real co_latitude;
extern AMREX_GPU_MANAGED amrex::Real rotation_radius;
extern AMREX_GPU_MANAGED amrex::Real mach_max_abort;
extern AMREX_GPU_MANAGED bool drive_initial_convection;
extern AMREX_GPU_MANAGED int stop_initial_convection;
extern AMREX_GPU_MANAGED bool restart_with_vel_field;
extern AMREX_GPU_MANAGED bool use_alt_energy_fix;
extern AMREX_GPU_MANAGED bool use_omegadot_terms_in_S;
extern AMREX_GPU_MANAGED bool use_thermal_diffusion;
extern AMREX_GPU_MANAGED int temp_diffusion_formulation;
extern AMREX_GPU_MANAGED int thermal_diffusion_type;
extern AMREX_GPU_MANAGED bool limit_conductivity;
extern AMREX_GPU_MANAGED bool do_burning;
extern std::string burner_threshold_species;
extern AMREX_GPU_MANAGED amrex::Real burner_threshold_cutoff;
extern AMREX_GPU_MANAGED bool do_subgrid_burning;
extern AMREX_GPU_MANAGED amrex::Real reaction_sum_tol;
extern AMREX_GPU_MANAGED amrex::Real small_temp;
extern AMREX_GPU_MANAGED amrex::Real small_dens;
extern AMREX_GPU_MANAGED bool use_tfromp;
extern AMREX_GPU_MANAGED bool use_eos_e_instead_of_h;
extern AMREX_GPU_MANAGED bool use_pprime_in_tfromp;
extern AMREX_GPU_MANAGED int s0_interp_type;
extern AMREX_GPU_MANAGED int w0_interp_type;
extern AMREX_GPU_MANAGED int s0mac_interp_type;
extern AMREX_GPU_MANAGED int w0mac_interp_type;
extern AMREX_GPU_MANAGED int print_fortran_warnings;
extern AMREX_GPU_MANAGED int print_update_diagnostics;
extern AMREX_GPU_MANAGED int track_grid_losses;
extern AMREX_GPU_MANAGED int sum_interval;
extern AMREX_GPU_MANAGED amrex::Real sum_per;
extern AMREX_GPU_MANAGED int show_center_of_mass;
extern AMREX_GPU_MANAGED int hard_cfl_limit;
extern std::string job_name;
extern AMREX_GPU_MANAGED int output_at_completion;
extern AMREX_GPU_MANAGED amrex::Real reset_checkpoint_time;
extern AMREX_GPU_MANAGED int reset_checkpoint_step;
extern AMREX_GPU_MANAGED bool use_particles;
extern AMREX_GPU_MANAGED bool store_particle_vels;
extern AMREX_GPU_MANAGED bool do_heating;
extern AMREX_GPU_MANAGED int sdc_iters;
extern AMREX_GPU_MANAGED bool sdc_couple_mac_velocity;
extern AMREX_GPU_MANAGED bool deterministic_nodal_solve;
extern AMREX_GPU_MANAGED amrex::Real eps_init_proj_cart;
extern AMREX_GPU_MANAGED amrex::Real eps_init_proj_sph;
extern AMREX_GPU_MANAGED amrex::Real eps_divu_cart;
extern AMREX_GPU_MANAGED amrex::Real eps_divu_sph;
extern AMREX_GPU_MANAGED amrex::Real divu_iter_factor;
extern AMREX_GPU_MANAGED amrex::Real divu_level_factor;
extern AMREX_GPU_MANAGED amrex::Real eps_mac;
extern AMREX_GPU_MANAGED amrex::Real eps_mac_max;
extern AMREX_GPU_MANAGED amrex::Real mac_level_factor;
extern AMREX_GPU_MANAGED amrex::Real eps_mac_bottom;
extern AMREX_GPU_MANAGED amrex::Real eps_hg;
extern AMREX_GPU_MANAGED amrex::Real eps_hg_max;
extern AMREX_GPU_MANAGED amrex::Real hg_level_factor;
extern AMREX_GPU_MANAGED amrex::Real eps_hg_bottom;
};

#endif
