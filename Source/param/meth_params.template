! This module stores the runtime parameters and integer names for 
! indexing arrays.
!
! The Fortran-specific parameters are initialized in set_method_params(),
! and the ones that we are mirroring from C++ and obtaining through the
! ParmParse module are initialized in read_method_params().

module meth_params_module

  use amrex_fort_module, only : rt => amrex_real
  implicit none

  ! variables in the module

  integer, allocatable, save :: rho_comp, rhoh_comp, spec_comp, temp_comp, pi_comp
  integer, allocatable, save :: nscal
  double precision, allocatable, save :: prob_lo(:), prob_hi(:)
  double precision, allocatable, save :: rel_eps

#ifdef AMREX_USE_CUDA
  attributes(managed) :: rho_comp, rhoh_comp, spec_comp, temp_comp, pi_comp
  attributes(managed) :: nscal
  attributes(managed) :: prob_lo, prob_hi
  attributes(managed) :: rel_eps
#endif

  ! Begin the declarations of the ParmParse parameters

  @@f90_declarations@@

  ! End the declarations of the ParmParse parameters

contains

  subroutine read_method_params() bind(C, name="read_method_params")

    use amrex_parmparse_module, only: amrex_parmparse_build, amrex_parmparse_destroy, amrex_parmparse

    use amrex_fort_module, only : rt => amrex_real
    implicit none

    type (amrex_parmparse) :: pp

    allocate(rho_comp, rhoh_comp, spec_comp, temp_comp, pi_comp)
    allocate(nscal)
    allocate(prob_lo(3))
    allocate(prob_hi(3))
    allocate(rel_eps)

    @@set_maestro_params@@

  end subroutine read_method_params


  subroutine finalize_meth_params() bind(C, name="finalize_meth_params")
    implicit none

    @@free_maestro_params@@
    
  end subroutine finalize_meth_params

end module meth_params_module
