# name   type   default   need in Fortran?   ifdef    fortran name    fortran type
#
# note, name can have two values, as (a, b).  a will be the name used
# in the inputs file, b is the variable name in the C++ class.


@namespace: maestro Maestro static

#-----------------------------------------------------------------------------
# category: problem initialization
#-----------------------------------------------------------------------------

# input model file
model_file                  string         "model.hse"        y

# Turn on a perturbation in the initial data.  Problem specific.
perturb_model               int            0                  y

# print out HSE diagnostics as a function of r for the initial model
print_init_hse_diag         int            0                  y

#-----------------------------------------------------------------------------
# category: timestepping
#-----------------------------------------------------------------------------

# simulation stop time
stop_time                    Real         -1.0 

# Maximum number of steps in the simulation.
max_step                     int          1

# CFL factor to use in the computation of the advection timestep constraint
cflfac                       Real          0.8                y

#-----------------------------------------------------------------------------
# category: grid
#-----------------------------------------------------------------------------

# how often to regrid
regrid_int                   int          -1

#-----------------------------------------------------------------------------
# category: output
#-----------------------------------------------------------------------------

# number of timesteps between plot files
plot_int                     int          10

# root name of plot file
plot_base_name               string       "plt"

#-----------------------------------------------------------------------------
# category: synchronization
#-----------------------------------------------------------------------------

# do we do the hyperbolic reflux at coarse-fine interfaces?
do_reflux                    int           1

#-----------------------------------------------------------------------------
# category: EOS
#-----------------------------------------------------------------------------

small_temp                   Real               5.e6         y

small_dens                   Real               1.e-5        y

# When updating temperature, use $T=T(\rho,p_0,X) $ rather than
# $T=T(\rho,h,X)$.
use_tfromp                   int                0            y

# In deriving the temperature from the $h$, first subtract off
# $p_0/\rho$ to define $e$, and use that as the input to the EOS.
use_eos_e_instead_of_h       int                0            y

use_pprime_in_tfromp         int                0            y
